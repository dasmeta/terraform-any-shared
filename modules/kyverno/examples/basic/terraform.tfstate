{
  "version": 4,
  "terraform_version": "1.11.0",
  "serial": 8,
  "lineage": "6339af35-d404-e1b9-edde-a2ad3cd5233f",
  "outputs": {},
  "resources": [
    {
      "module": "module.this",
      "mode": "managed",
      "type": "helm_release",
      "name": "resources",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "resource",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kyverno-resources",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.1.0",
                "chart": "resource",
                "first_deployed": 1756137740,
                "last_deployed": 1756208072,
                "name": "kyverno-resources",
                "namespace": "kyverno",
                "notes": "To get the resources created by this helm chart release run:\nkubectl get ClusterPolicy bitnami-to-bitnamilegacy --namespace kyverno\nkubectl get ClusterPolicy add-linkerd-mesh-injection --namespace kyverno\n",
                "revision": 3,
                "values": "{\"resources\":[{\"apiVersion\":\"kyverno.io/v1\",\"kind\":\"ClusterPolicy\",\"metadata\":{\"annotations\":{\"policies.kyverno.io/description\":\"Automatically replaces docker.io/bitnami/ with docker.io/bitnamilegacy/ in container images.\",\"policies.kyverno.io/severity\":\"medium\",\"policies.kyverno.io/subject\":\"Pod\",\"policies.kyverno.io/title\":\"Replace Bitnami Images with Bitnami Legacy\"},\"name\":\"bitnami-to-bitnamilegacy\"},\"spec\":{\"background\":false,\"failurePolicy\":\"Ignore\",\"rules\":[{\"match\":{\"any\":[{\"resources\":{\"kinds\":[\"Pod\"]}}]},\"mutate\":{\"foreach\":[{\"list\":\"request.object.spec.containers\",\"patchStrategicMerge\":{\"spec\":{\"containers\":[{\"(name)\":\"{{ element.name }}\",\"image\":\"{{ replace_all(element.image, 'bitnami/', 'bitnamilegacy/') }}\"}]}},\"preconditions\":{\"all\":[{\"key\":\"{{ element.image }}\",\"operator\":\"Equals\",\"value\":\"*bitnami/*\"}]}}]},\"name\":\"replace-bitnami-in-containers\"},{\"match\":{\"any\":[{\"resources\":{\"kinds\":[\"Pod\"]}}]},\"mutate\":{\"foreach\":[{\"list\":\"request.object.spec.initContainers\",\"patchStrategicMerge\":{\"spec\":{\"initContainers\":[{\"(name)\":\"{{ element.name }}\",\"image\":\"{{ replace_all(element.image, 'bitnami/', 'bitnamilegacy/') }}\"}]}},\"preconditions\":{\"all\":[{\"key\":\"{{ element.image }}\",\"operator\":\"Equals\",\"value\":\"*bitnami/*\"}]}}]},\"name\":\"replace-bitnami-in-initcontainers\",\"preconditions\":{\"all\":[{\"key\":\"{{ (request.object.spec.initContainers) || `[]` | length(@) }}\",\"operator\":\"GreaterThanOrEquals\",\"value\":1}]}}],\"validationFailureAction\":\"Audit\"}},{\"apiVersion\":\"kyverno.io/v1\",\"kind\":\"ClusterPolicy\",\"metadata\":{\"annotations\":{\"policies.kyverno.io/category\":\"Linkerd\",\"policies.kyverno.io/description\":\"Sidecar proxy injection in Linkerd may be handled at the Namespace level by setting the annotation `linkerd.io/inject` to `enabled`. In addition, a second annotation may be applied which controls the Pod startup behavior. This policy sets the annotations, if not present, `linkerd.io/inject` and `config.linkerd.io/proxy-await` to `enabled` on all new Namespaces.\",\"policies.kyverno.io/severity\":\"medium\",\"policies.kyverno.io/subject\":\"Namespace, Annotation\",\"policies.kyverno.io/title\":\"Add Linkerd Mesh Injection\"},\"name\":\"add-linkerd-mesh-injection\"},\"spec\":{\"rules\":[{\"match\":{\"any\":[{\"resources\":{\"kinds\":[\"Namespace\"]}}]},\"mutate\":{\"patchStrategicMerge\":{\"metadata\":{\"annotations\":{\"+(config.linkerd.io/proxy-await)\":\"enabled\",\"+(linkerd.io/inject)\":\"enabled\"}}}},\"name\":\"add-mesh-annotations\"}]}}]}",
                "version": "0.1.0"
              }
            ],
            "name": "kyverno-resources",
            "namespace": "kyverno",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://dasmeta.github.io/helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "{\"resources\":[{\"apiVersion\":\"kyverno.io/v1\",\"kind\":\"ClusterPolicy\",\"metadata\":{\"annotations\":{\"policies.kyverno.io/description\":\"Automatically replaces docker.io/bitnami/ with docker.io/bitnamilegacy/ in container images.\",\"policies.kyverno.io/severity\":\"medium\",\"policies.kyverno.io/subject\":\"Pod\",\"policies.kyverno.io/title\":\"Replace Bitnami Images with Bitnami Legacy\"},\"name\":\"bitnami-to-bitnamilegacy\"},\"spec\":{\"background\":false,\"failurePolicy\":\"Ignore\",\"rules\":[{\"match\":{\"any\":[{\"resources\":{\"kinds\":[\"Pod\"]}}]},\"mutate\":{\"foreach\":[{\"list\":\"request.object.spec.containers\",\"patchStrategicMerge\":{\"spec\":{\"containers\":[{\"(name)\":\"{{ element.name }}\",\"image\":\"{{ replace_all(element.image, 'bitnami/', 'bitnamilegacy/') }}\"}]}},\"preconditions\":{\"all\":[{\"key\":\"{{ element.image }}\",\"operator\":\"Equals\",\"value\":\"*bitnami/*\"}]}}]},\"name\":\"replace-bitnami-in-containers\"},{\"match\":{\"any\":[{\"resources\":{\"kinds\":[\"Pod\"]}}]},\"mutate\":{\"foreach\":[{\"list\":\"request.object.spec.initContainers\",\"patchStrategicMerge\":{\"spec\":{\"initContainers\":[{\"(name)\":\"{{ element.name }}\",\"image\":\"{{ replace_all(element.image, 'bitnami/', 'bitnamilegacy/') }}\"}]}},\"preconditions\":{\"all\":[{\"key\":\"{{ element.image }}\",\"operator\":\"Equals\",\"value\":\"*bitnami/*\"}]}}]},\"name\":\"replace-bitnami-in-initcontainers\",\"preconditions\":{\"all\":[{\"key\":\"{{ (request.object.spec.initContainers) || `[]` | length(@) }}\",\"operator\":\"GreaterThanOrEquals\",\"value\":1}]}}],\"validationFailureAction\":\"Audit\"}},{\"apiVersion\":\"kyverno.io/v1\",\"kind\":\"ClusterPolicy\",\"metadata\":{\"annotations\":{\"policies.kyverno.io/category\":\"Linkerd\",\"policies.kyverno.io/description\":\"Sidecar proxy injection in Linkerd may be handled at the Namespace level by setting the annotation `linkerd.io/inject` to `enabled`. In addition, a second annotation may be applied which controls the Pod startup behavior. This policy sets the annotations, if not present, `linkerd.io/inject` and `config.linkerd.io/proxy-await` to `enabled` on all new Namespaces.\",\"policies.kyverno.io/severity\":\"medium\",\"policies.kyverno.io/subject\":\"Namespace, Annotation\",\"policies.kyverno.io/title\":\"Add Linkerd Mesh Injection\"},\"name\":\"add-linkerd-mesh-injection\"},\"spec\":{\"rules\":[{\"match\":{\"any\":[{\"resources\":{\"kinds\":[\"Namespace\"]}}]},\"mutate\":{\"patchStrategicMerge\":{\"metadata\":{\"annotations\":{\"+(config.linkerd.io/proxy-await)\":\"enabled\",\"+(linkerd.io/inject)\":\"enabled\"}}}},\"name\":\"add-mesh-annotations\"}]}}]}"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.this.helm_release.this",
            "module.this.module.custom_default_configs.data.utils_deep_merge_yaml.all_map_configs"
          ]
        }
      ]
    },
    {
      "module": "module.this",
      "mode": "managed",
      "type": "helm_release",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kyverno",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kyverno",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.15.1",
                "chart": "kyverno",
                "first_deployed": 1756137559,
                "last_deployed": 1756137559,
                "name": "kyverno",
                "namespace": "kyverno",
                "notes": "Chart version: 3.5.1\nKyverno version: v1.15.1\n\nThank you for installing kyverno! Your release is named kyverno.\n\nThe following components have been installed in your cluster:\n- CRDs\n- Admission controller\n\n\n⚠️  WARNING: Setting the admission controller replica count below 2 means Kyverno is not running in high availability mode.\n⚠️  WARNING: Generating ValidatingAdmissionPolicy requires a Kubernetes 1.27+ cluster with `ValidatingAdmissionPolicy` feature gate and `admissionregistration.k8s.io` API group enabled.\n⚠️  WARNING: Generating reports from ValidatingAdmissionPolicies requires a Kubernetes 1.27+ cluster with `ValidatingAdmissionPolicy` feature gate and `admissionregistration.k8s.io` API group enabled.\n\n\n⚠️  WARNING: PolicyExceptions are disabled by default. To enable them, set '--enablePolicyException' to true.\n\n💡 Note: There is a trade-off when deciding which approach to take regarding Namespace exclusions. Please see the documentation at https://kyverno.io/docs/installation/#security-vs-operability to understand the risks.\n",
                "revision": 1,
                "values": "{\"backgroundController\":{\"enabled\":false},\"cleanupController\":{\"enabled\":false},\"reportsController\":{\"enabled\":false}}",
                "version": "3.5.1"
              }
            ],
            "name": "kyverno",
            "namespace": "kyverno",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kyverno.github.io/kyverno/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "{\"backgroundController\":{\"enabled\":false},\"cleanupController\":{\"enabled\":false},\"reportsController\":{\"enabled\":false}}"
            ],
            "verify": false,
            "version": "3.5.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.this.module.custom_default_configs.data.utils_deep_merge_yaml.all_map_configs"
          ]
        }
      ]
    },
    {
      "module": "module.this.module.custom_default_configs",
      "mode": "data",
      "type": "utils_deep_merge_yaml",
      "name": "all_map_configs",
      "provider": "provider[\"registry.terraform.io/cloudposse/utils\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "append_list": false,
            "deep_copy_list": false,
            "id": "be5489800b7e9b7d3606190c452c207e8484fca6",
            "input": [
              "\"backgroundController\":\n  \"enabled\": false\n\"cleanupController\":\n  \"enabled\": false\n\"reportsController\":\n  \"enabled\": false\n",
              "{}\n"
            ],
            "output": "backgroundController:\n    enabled: false\ncleanupController:\n    enabled: false\nreportsController:\n    enabled: false\n"
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "var",
      "config_addr": "module.this.module.custom_default_configs.var.maps",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.this.module.custom_default_configs.var.maps",
          "status": "pass"
        }
      ]
    }
  ]
}
